<VirtualHost *:80>
        # The ServerName directive sets the request scheme, hostname and port that
        # the server uses to identify itself. This is used when creating
        # redirection URLs. In the context of virtual hosts, the ServerName
        # specifies what hostname must appear in the request's Host: header to
        # match this virtual host. For the default virtual host (this file) this
        # value is not decisive as it is used as a last resort host regardless.
        # However, you must set it for any further virtual host explicitly.

        # A CONFIGURER
        ServerName ACCES-URL
        ServerAdmin MAIL-SYSTEM
	# FIN A CONFIGURER
	# (voir plus bas)

	# DocumentRoot
	#
	# Si l'url de l'application est: gramc.exemple.fr/gramc3
	# Le plus simple est de faire un lien symbolique depuis le DocumentRoot vers le répertoire public:
	#
	# cd /var/www/html
	# ln -s /chemin/vers/gramc3/public gramc-meso
	#
	# ATTENTION - SECURITE - Seul le répertoire public doit être exposé par le serveur web.
	#	      		 NE PAS exposer le répertoire gramc-meso !
	#
        DocumentRoot /var/www/html/
	redirectmatch permanent "^/$" "/gramc-meso"

	SetEnvIf Request_URI "^/gramc-meso" BASE=/gramc-meso

        # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
        # error, crit, alert, emerg.
        # It is also possible to configure the loglevel for particular
        # modules, e.g.
        LogLevel info ssl:warn

        ErrorLog ${APACHE_LOG_DIR}/gramc-meso-error.log
        CustomLog ${APACHE_LOG_DIR}/gramc-meso-access.log combined

        #
        # Copie de .htaccess généré par:
        #       composer remove symfony/apache-pack
        #       composer require symfony/apache-pack
        #
        <Location "/gramc-meso">
                Require all granted
                DirectoryIndex index.php
                # Options +FollowSymlinks
                <IfModule mod_negotiation.c>
                    Options -MultiViews
                </IfModule>

                RewriteEngine On

                # Determine the RewriteBase automatically and set it as environment variable.
                RewriteCond %{REQUEST_URI}::$0 ^(/.+)/(.*)::\2$
                RewriteRule .* - [E=BASE:%1]

                # Sets the HTTP_AUTHORIZATION header removed by Apache
                RewriteCond %{HTTP:Authorization} .+
                RewriteRule ^ - [E=HTTP_AUTHORIZATION:%0]

                RewriteCond %{ENV:REDIRECT_STATUS} =""
                RewriteRule ^index\.php(?:/(.*)|$) %{ENV:BASE}/$1 [R=301,L]

                # If the requested filename exists, simply serve it.
                # We only want to let Apache serve files and not directories.
                # Rewrite all other queries to the front controller.
                RewriteCond %{REQUEST_FILENAME} !-f
                RewriteRule ^ %{ENV:BASE}/index.php [L]

        </Location>
	
        # AUTHENTIFICATION AVEC iam
        # A CONFIGURER
	OIDCProviderMetadataURL https://iam-generic.ijclab.in2p3.fr/.well-known/openid-configuration
	# donné par iam
	OIDCClientID 
	# donné par iam (Credentials)
	OIDCClientSecret 
	OIDCRedirectURI https://acces-prod.mesonet.fr/demoidc/redirect_uri
	OIDCRedirectURI https://acces-prod.mesonet.fr/gramc-meso/login/redirect_uri
	# généré par pwgen 80 
	OIDCCryptoPassphrase 
	OIDCScope "openid email profile scim:read" 
        # FIN A CONFIGURER

	<Location /demoidc>
    		#require all granted
    	        AuthType openid-connect
    		Require valid-user
	</location>
	<Location "/gramc-meso/login">
    		#require all granted
    		AuthType openid-connect
    		Require valid-user
	</Location>


</VirtualHost>

